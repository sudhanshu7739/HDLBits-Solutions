module top_module(
    input clk,
    input areset,    // Freshly brainwashed Lemmings walk left.
    input bump_left,
    input bump_right,
    input ground,
    output walk_left,
    output walk_right,
    output aaah ); 
    parameter LEFT=2'b00,RIGHT=2'b01,FALL=2'b10,FALL1=2'b11;
    reg [1:0] state,next_state;
    always@(*)
        begin
            case(state)
                LEFT:next_state=ground?(bump_left^bump_right?(bump_left?RIGHT:LEFT):(bump_left&bump_right?RIGHT:LEFT)):FALL;
                RIGHT:next_state=ground?(bump_left^bump_right?(bump_left?RIGHT:LEFT):(bump_left&bump_right?LEFT:RIGHT)):FALL1;
                FALL:next_state=ground?(LEFT):FALL;
                FALL1:next_state=ground?(RIGHT):FALL1;
                default:next_state=LEFT;
            endcase
        end
    always@(posedge clk ,posedge areset)
        begin
            if(areset)
                state=LEFT;
            else
                state=next_state;
            case(state)
                LEFT:begin
                    walk_left=1;
                    walk_right=0;
                    aaah=0;
                end
                RIGHT:begin
                    walk_left=0;
                    walk_right=1;
                    aaah=0;
                end
                FALL:begin
                    walk_left=0;
                    walk_right=0;
                    aaah=1;
                end
                FALL1:begin
                    walk_left=0;
                    walk_right=0;
                    aaah=1;
                end
                default:walk_left=1;
            endcase
                
        end

endmodule
