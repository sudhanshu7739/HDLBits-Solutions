module top_module(
    input clk,
    input areset,    // Freshly brainwashed Lemmings walk left.
    input bump_left,
    input bump_right,
    input ground,
    input dig,
    output walk_left,
    output walk_right,
    output aaah,
    output digging ); 
    integer t;
    parameter LEFT=3'b000,RIGHT=3'b001,FALL=3'b010,FALL1=3'b011,DIG=3'b100,DIG1=3'b101,DED=3'b110;
    reg [2:0] state,next_state;
    initial
        t=0;
    always@(*)
        begin
            case(state)
                LEFT:next_state=ground?(dig?(DIG):(bump_left^bump_right?(bump_left?RIGHT:LEFT):(bump_left&bump_right?RIGHT:LEFT))):FALL;
                RIGHT:next_state=ground?(dig?(DIG1):(bump_left^bump_right?(bump_left?RIGHT:LEFT):(bump_left&bump_right?LEFT:RIGHT))):FALL1;
                FALL:next_state=ground?(t==20?DED:LEFT):FALL;
                FALL1:next_state=ground?(t==20?DED:RIGHT):FALL1;
                DIG:next_state=ground?(DIG):FALL;
                DIG1:next_state=ground?(DIG1):FALL1;
                DED:next_state=DED;
                default:next_state=LEFT;
            endcase
        end
   always@(posedge clk)
        begin
            case(state)
                FALL:t=t<20?t+1:t;
                FALL1:t=t<20?t+1:t;
                default:t=0;
            endcase
        end
    always@(posedge clk ,posedge areset)
        begin
            if(areset)
                state=LEFT;
            else
                state=next_state;
            case(state)
                LEFT:begin
                    walk_left=1;
                    walk_right=0;
                    digging=0;
                    aaah=0;
                    
                    
                end
                RIGHT:begin
                    walk_left=0;
                    walk_right=1;
                    digging=0;
                    aaah=0;
                   
                    
                end
                FALL:begin
                    walk_left=0;
                    walk_right=0;
                    digging=0;
                    aaah=1;
                    
                    
                end
                FALL1:begin
                    walk_left=0;
                    walk_right=0;
                    digging=0;
                    aaah=1;
                    
                    
                end
                DIG:begin
                    walk_left=0;
                    walk_right=0;
                    digging=1;
                    aaah=0;
                    
                    
                end
                DIG1:begin
                    walk_left=0;
                    walk_right=0;
                    digging=1;
                    aaah=0;
                    
                    
                end
                DED:begin
                    walk_left=0;
                    walk_right=0;
                    digging=0;
                    aaah=0;
                  
                    
                end
                
                default:walk_left=0;
            endcase
                
        end



endmodule
